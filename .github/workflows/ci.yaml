name: CI

on:
  push:
    branches:
      - main

jobs:
  build-and-update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Application Repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Prepare Image Tag
        id: prepare-tag
        run: |
          TAG=$(date +%s)
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "Generated TAG: $TAG"

      - name: Build and Push Docker Image
        id: build_and_push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ykim73094/metanet-msa-migration-fe:latest
            ykim73094/metanet-msa-migration-fe:${{ env.TAG }}

      - name: Checkout ArgoCD Repository
        uses: actions/checkout@v3
        with:
          repository: Metanet-Signal-Platoon/ArgoCD-metabank
          token: ${{ secrets.GH_PAT }}
          fetch-depth: 0  # 전체 브랜치 가져오기

      - name: Check File Path
        run: ls -R

      - name: Find application.yaml File
        run: |
          APP_FILE="argo-metanet-msa-migration-fe-dev/templates/application.yaml"

          if [ ! -f "$APP_FILE" ]; then
            echo "Error: application.yaml not found!"
            exit 1
          fi

          echo "Found application.yaml: $APP_FILE"
          echo "APP_FILE=$APP_FILE" >> $GITHUB_ENV

      - name: Update valueFiles in application.yaml (Ensure Only values-prod.yaml)
        run: |
          echo "Updating valueFiles in ${{ env.APP_FILE }}"

          # 기존 valueFiles 리스트를 삭제하고 values-prod.yaml만 유지
          sed -i '/valueFiles:/,/helm:/c\      valueFiles:\n      - values-prod.yaml' "${{ env.APP_FILE }}"

          echo "=== Updated application.yaml ==="
          cat "${{ env.APP_FILE }}"

      - name: Commit and Push Changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          
          git add "${{ env.APP_FILE }}"

          # 변경 사항이 있는 경우에만 푸시
          if git diff --staged --quiet; then
            echo "No changes to commit"
            exit 0
          else
            git commit -m "Ensure only values-prod.yaml in application.yaml"
            git push origin main
          fi
